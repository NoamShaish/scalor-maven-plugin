Scalor macro: { 
reportValue("eclipseScalaPluginVersionCheck", eclipseScalaPluginVersionCheck.asInstanceOf[Boolean]); 
reportValue("eclipseScalaPluginVersionError", eclipseScalaPluginVersionError.asInstanceOf[Boolean]); reportValue("eclipseScalaPluginVersionRange", eclipseScalaPluginVersionRange.asInstanceOf[String]); reportValue("eclipseRenameLibraryContainer", eclipseRenameLibraryContainer.asInstanceOf[Boolean]); reportValue("eclipseResetPreferences", eclipseResetPreferences.asInstanceOf[Boolean]); reportValue("eclipseLogPersistSettings", eclipseLogPersistSettings.asInstanceOf[Boolean]); reportValue("eclipseLogPersistCompiler", eclipseLogPersistCompiler.asInstanceOf[Boolean]); reportValue("eclipseLogClasspathOrder", eclipseLogClasspathOrder.asInstanceOf[Boolean]); reportValue("eclipseLogInstallResolve", eclipseLogInstallResolve.asInstanceOf[Boolean]); reportValue("eclipseLogCustomInstall", eclipseLogCustomInstall.asInstanceOf[Boolean]); reportValue("eclipseCustomInstallReport", eclipseCustomInstallReport.asInstanceOf[java.io.File]); reportValue("eclipseScalaSettingsCommentApply", eclipseScalaSettingsCommentApply.asInstanceOf[Boolean]); reportValue("eclipseScalaSettingsCommentString", eclipseScalaSettingsCommentString.asInstanceOf[String]); reportValue("eclipseProjectCommentApply", eclipseProjectCommentApply.asInstanceOf[Boolean]); reportValue("eclipseProjectCommentString", eclipseProjectCommentString.asInstanceOf[String]); reportValue("eclipseBuilderReorder", eclipseBuilderReorder.asInstanceOf[Boolean]); reportValue("eclipseBuilderOrdering", eclipseBuilderOrdering.asInstanceOf[String]); reportValue("eclipseClasspathReorder", eclipseClasspathReorder.asInstanceOf[Boolean]); reportValue("eclipseClasspathOrdering", eclipseClasspathOrdering.asInstanceOf[String]); reportValue("eclipseMavenReorder", eclipseMavenReorder.asInstanceOf[Boolean]); reportValue("eclipseMavenOrdering", eclipseMavenOrdering.asInstanceOf[String]); reportValue("eclipseOptsScalaIDE", eclipseOptsScalaIDE.asInstanceOf[String]) }