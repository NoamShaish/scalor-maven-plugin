<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>com.carrotgarden.maven</groupId>
    <artifactId>scalor-maven-plugin-demo</artifactId>
    <version>0-SNAPSHOT</version>

    <description>
    Self-contained, minimal demonstration project. 
    Project feature showcase:
    * 3-scope build
    * Scala macro compile
    * Scala.js runtime.js linker
    </description>

    <properties>

        <version.scala.epoch>2.12</version.scala.epoch>
        <version.scala.release>2.12.4</version.scala.release>

        <version.scala.zinc>1.1.0</version.scala.zinc>
        <version.scala.plugin.macro>2.1.1</version.scala.plugin.macro>

        <version.sjs.epoch>0.6</version.sjs.epoch>
        <version.sjs.release>${version.sjs.epoch}.21</version.sjs.release>
        <version.sjs.library>sjs${version.sjs.epoch}_${version.scala.epoch}</version.sjs.library>

        <version.java>1.8</version.java>

        <maven.compiler.source>${version.java}</maven.compiler.source>
        <maven.compiler.target>${version.java}</maven.compiler.target>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    </properties>

    <dependencies>

        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${version.scala.release}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-reflect</artifactId>
            <version>${version.scala.release}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.scala-js</groupId>
            <artifactId>scalajs-library_${version.scala.epoch}</artifactId>
            <version>${version.sjs.release}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>

            <!-- Disable default compiler. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>
                <configuration>
                    <skip>true</skip>
                    <skipMain>true</skipMain>
                </configuration>
            </plugin>

            <!-- Enable alternative compiler. -->
            <plugin>
                <groupId>com.carrotgarden.maven</groupId>
                <artifactId>scalor-maven-plugin_2.12</artifactId>
                <version>1.0.3.20180115180433</version>

                <configuration>

                    <zincLogSourcesList>true</zincLogSourcesList>
                    <zincLogProjectClassPath>true</zincLogProjectClassPath>
                    <zincLogCompilerClassPath>true</zincLogCompilerClassPath>
                    <zincLogCompilerPluginList>true</zincLogCompilerPluginList>
                    <!-- <skipLogReason>true</skipLogReason> -->
                    <!-- <eclipseLogBuildParticipant>true</eclipseLogBuildParticipant> -->

                    <zincCompileOptions>
                        -P:scalajs:sjsDefinedByDefault
                        -encoding
                        ${project.build.sourceEncoding}
                        -target:jvm-${version.java}
                        -feature
                        -unchecked
                        -deprecation
                        -compileorder:Mixed
                    </zincCompileOptions>

                    <defineBridge>
                        <dependency>
                            <groupId>org.scala-sbt</groupId>
                            <artifactId>compiler-bridge_${version.scala.epoch}</artifactId>
                            <version>${version.scala.zinc}</version>
                        </dependency>
                    </defineBridge>
                    <defineCompiler>
                        <dependency>
                            <groupId>org.scala-lang</groupId>
                            <artifactId>scala-compiler</artifactId>
                            <version>${version.scala.release}</version>
                        </dependency>
                    </defineCompiler>
                    <definePluginList>
                        <dependency>
                            <groupId>org.scala-js</groupId>
                            <artifactId>scalajs-compiler_${version.scala.release}</artifactId>
                            <version>${version.sjs.release}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.scalamacros</groupId>
                            <artifactId>paradise_${version.scala.release}</artifactId>
                            <version>${version.scala.plugin.macro}</version>
                        </dependency>
                    </definePluginList>

                </configuration>

                <executions>
                    <execution>
                        <goals>

                            <goal>eclipse-config</goal>

                            <goal>clean-macro</goal>
                            <goal>clean-main</goal>
                            <goal>clean-test</goal>

                            <goal>register-macro</goal>
                            <goal>register-main</goal>
                            <goal>register-test</goal>

                            <goal>compile-macro</goal>
                            <goal>compile-main</goal>
                            <goal>compile-test</goal>

                            <goal>link-scala-js-main</goal>
                            <goal>link-scala-js-test</goal>

                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>
